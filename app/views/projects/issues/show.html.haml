.row
  .span10
    .media
      .pull-left
        = link_to_member(@project, @issue.author, name: false, size: 50)

      .media-body
        .ui-box.ui-box-show
          .ui-box-head
            .media
              .pull-right
                - if @issue.closed?
                  .error.status_info Closed
                - else
                  .success.status_info Opened

              .media-body
                %span.muted
                  Created by #{link_to_member(@project, @issue.assignee, avatar: false)} 
                  %span{title: @issue.created_at.stamp("Aug 21, 2011")} #{time_ago_in_words(@issue.created_at)} ago
                %h4.box-title
                  = gfm escape_once(@issue.title)

          .ui-box-body
            %cite.cgray
              - if @issue.assignee
                \ Assigned to #{link_to_member(@project, @issue.assignee, avatar: false)}
              - else
                \ No one assigned.

            .pull-right.issue-milestone
              - if @issue.milestone
                - milestone = @issue.milestone
                  .media
                    .progress.pull-right
                      .bar{style: "width: #{milestone.percent_complete}%"}

                    .media-body
                      %cite.cgray Milestone:
                      %strong= link_to_gfm truncate(milestone.title, length: 20), project_milestone_path(milestone.project, milestone)

              - else
                %cite.cgray No milestone set.

          - if @issue.description.present?
            .ui-box-bottom
              .wiki
                = preserve do
                  = markdown @issue.description

        - content_for :note_actions do
          - if can?(current_user, :modify_issue, @issue)
            - if @issue.closed?
              = link_to 'Reopen Issue', project_issue_path(@project, @issue, issue: {state_event: :reopen }, status_only: true), method: :put,  class: "btn grouped reopen_issue"
            - else
              = link_to 'Close Issue', project_issue_path(@project, @issue, issue: {state_event: :close }, status_only: true), method: :put, class: "btn grouped close_issue", title: "Close Issue"

        .participants
          %cite.cgray #{@issue.participants.count} participants
          - @issue.participants.each do |participant|
            = link_to_member(@project, participant, name: false, size: 24)

        .voting_notes#notes= render "projects/notes/notes_with_form"

  .span2.issue-sidebar
    .status_info
      Issue ##{@issue.id}
    .clearfix

    %ul.nav.nav-pills.nav-stacked.nav-stacked-menu
      - if can?(current_user, :modify_issue, @issue)
        %li
          - if @issue.closed?
            = link_to 'Reopen', project_issue_path(@project, @issue, issue: {state_event: :reopen }, status_only: true), method: :put, class: 'success'
          - else
            = link_to 'Close', project_issue_path(@project, @issue, issue: {state_event: :close }, status_only: true), method: :put, title: "Close Issue", class: 'error'
        %li
          = link_to edit_project_issue_path(@project, @issue) do
            Edit

      %li
        = link_to new_project_issue_path(@project), title: "New Issue", id: "new_issue_link" do
          New Issue

    %hr

    %h6 Labels
    %p
      - @issue.labels.each do |label|
        %span{class: "label #{label_css_class(label.name)}"}
          %i.icon-tag
          = label.name

    %hr

    %h6 Votes
    #votes= render 'votes/votes_block', votable: @issue