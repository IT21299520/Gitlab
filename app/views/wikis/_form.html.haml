= form_for [@project, @wiki] do |f|
  -if @wiki.errors.any?
    #error_explanation
      %h2= "#{pluralize(@wiki.errors.count, "error")} prohibited this wiki from being saved:"
      %ul
        - @wiki.errors.full_messages.each do |msg|
          %li= msg

  .ui-box.ui-box-show
    .ui-box-head
      = f.label :title
      .input= f.text_field :title, class: 'span8'
      = f.hidden_field :slug
    .ui-box-body
      .input
        %span.cgray
          Wiki content is parsed with #{link_to "GitLab Flavored Markdown", help_markdown_path, target: '_blank'}.
          To link to a (new) page you can just type
          %code [Link Title](page-slug)
          \.

    .ui-box-bottom
      = f.label :content
      .input#em_content
      .input= f.text_field :content, :type => "hidden"
      :javascript
        var opts = {
          container: 'em_content',
          basePath: '/assets/',
          clientSideStorage: true,
          parser: marked,
          file: {
            name: 'epiceditor',
            defaultContent: '',
            autoSave: 100
          },
          theme: {
            base:'/themes/base/epiceditor.css',
            preview:'/themes/preview/preview-dark.css',
            editor:'/themes/editor/epic-dark.css'
          },
          focusOnLoad: false,
          shortcut: {
            modifier: 18,
            fullscreen: 70,
            preview: 80,
            edit: 79
          }
        }
        var editor = new EpicEditor(opts).load();
        editor.importFile('epiceditor',"#{escape_javascript(@wiki[:content])}");
  .actions
    = f.submit 'Save', class: "save-btn btn", :onclick=>"$('#wiki_content').val(editor.exportFile('epiceditor'));"
    = link_to "Cancel", project_wiki_path(@project, :index), class: "btn btn-cancel"
