- if current_user.require_ssh_key?
  .alert-message.block-message.error
    %p  
      = t('dashboard.index.require_key.before')  
      = link_to new_key_path, :class => "vlink" do 
        = t('dashboard.index.require_key.href')
      = t('dashboard.index.require_key.after')

.alert-message.block-message.error
  %p
    = t '.empty'

- bash_lexer = Pygments::Lexer[:bash]
%div.git-empty
  %h3=t '.git_global'
  - setup_str = ["git config --global user.name \"#{current_user.name}\"", 
    "git config --global user.email  \"#{current_user.email}\""].join("\n")
  = preserve do
    = raw bash_lexer.highlight(setup_str, :lexer => 'bash', :options => {:encoding => 'utf-8'})

  %br
  %br
  %h3=t '.create'
  - repo_setup_str = ["mkdir #{@project.path}",
    "cd #{@project.path}",
    "git init", 
    "touch README",
    "git add README",
    "git commit -m 'first commit'",
    "git remote add origin #{@project.url_to_repo}",
    "git push -u origin master"].join("\n")

  = preserve do
    = raw bash_lexer.highlight(repo_setup_str)

  %br
  %br
  %h3= t '.existing'
  - exist_repo_setup_str = ["cd existing_git_repo",
    "git remote add origin #{@project.url_to_repo}",
    "git push -u origin master"].join("\n")
  = preserve do
    = raw bash_lexer.highlight(exist_repo_setup_str)

  - if can? current_user, :admin_project, @project
    .alert-message.block-message.error.prepend-top-20
      = link_to t('.remove'), @project, :confirm => t('global.destroy_confirm'), :method => :delete, :class => "btn danger"
