= render "home_panel"

%div.git-empty
  %p.slead
    We recommend every repository include #{link_to "README", project_path(@project)/new/master?file_name=README.md}, #{link_to "LICENSE", project_path(@project)/new/master?file_name=LICENSE.md}, and #{link_to ".gitignore", project_path(@project)/new/master?file_name=.gitignore} files. You may also be interested in including #{link_to ".gitattributes", project_path(@project)/new/master?file_name=.gitattributes}, #{link_to "CONTRIBUTING", project_path(@project)/new/master?file_name=CONTRIBUTING.md}, and #{link_to "VERSION", project_path(@project)/new/master?file_name=VERSION} files.
  %fieldset
    %legend Git global setup
    %pre.dark
      :preserve
        git config --global user.name "#{git_user_name}"
        git config --global user.email "#{git_user_email}"

  %fieldset
    %legend Create a new repository
    %pre.dark
      :preserve
        mkdir #{@project.path}
        cd #{@project.path}
        git init
        touch README.md
        git add README.md
        git commit -m "first commit"
        git remote add origin #{ content_tag(:span, default_url_to_repo, class: 'clone')}
        git push -u origin master

  %fieldset
    %legend Push an existing Git repository
    %pre.dark
      :preserve
        cd existing_git_repo
        git remote add origin #{ content_tag(:span, default_url_to_repo, class: 'clone')}
        git push -u origin master

- if can? current_user, :remove_project, @project
  .prepend-top-20
    = link_to 'Remove project', @project, data: { confirm: remove_project_message(@project)}, method: :delete, class: "btn btn-remove pull-right"
